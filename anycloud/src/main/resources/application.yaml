prometheus:
  metrics:
    node:
      status: "kube_node_status_condition==1"
    cpu:
      total: "sum(kube_node_status_capacity{resource=\"cpu\", ${NODE_FILTER} })"
      usage: |
        sum by (node) (
          sum by (internal_ip) (
            label_replace(
              rate(node_cpu_seconds_total{mode!="idle"}[5m]),
              "internal_ip",
              "$1",
              "instance",
              "(.*):[0-9]+"
            )
          )
          * on(internal_ip) group_left(node) kube_node_info{${NODE_FILTER}}
        )
      usage_namespace: |
        sum by (namespace) (
          rate(container_cpu_usage_seconds_total{
            container!~"POD|", 
            container!="", 
            ${NODE_FILTER}, ${NAMESPACE_FILTER}}[5m])
        )
      request: "sum by(node) (kube_pod_container_resource_requests{resource=\"cpu\", unit=\"core\",${NODE_FILTER},${NAMESPACE_FILTER} })"
      limit: "sum by(node) (kube_pod_container_resource_limits{resource=\"cpu\", unit=\"core\",${NODE_FILTER},${NAMESPACE_FILTER} })"
      load5:  |
        sum by (node) (
          sum by (internal_ip) (
            label_replace(
              node_load5,
              "internal_ip",
              "$1",
              "instance",
              "(.*):[0-9]+"
            )
          )
          * on(internal_ip) group_left(node) kube_node_info{${NODE_FILTER}}
        )
    memory:
      total: "sum(kube_node_status_capacity{resource=\"memory\", ${NODE_FILTER} })"
      usage: "sum by (node) (container_memory_usage_bytes{${NODE_FILTER}, ${NAMESPACE_FILTER}}) /1024 /1024 /1024"
      usage_namespace: |
        sum by (namespace) (
          container_memory_usage_bytes{
            container!~"POD|", 
            container!="", ${NODE_FILTER}, ${NAMESPACE_FILTER}
          }
        ) / 1024 / 1024 / 1024
      request: "sum by(node) (kube_pod_container_resource_requests{resource=\"memory\", unit=\"byte\",${NODE_FILTER},${NAMESPACE_FILTER} })"
      limit: "sum by(node) (kube_pod_container_resource_limits{resource=\"memory\", unit=\"byte\",${NODE_FILTER},${NAMESPACE_FILTER} })"
    filesystem:
      total: |
        sum (
             sum by (internal_ip) (
               label_replace(
                 node_filesystem_size_bytes{fstype=~"ext4|xfs|btrfs", mountpoint="/"},
                 "internal_ip",
                 "$1",
                 "instance",
                 "(.*):[0-9]+"
               )
             )
             * on(internal_ip) group_left(node) kube_node_info{${NODE_FILTER}}
           ) /1024 /1024 /1024
      used: |
        sum by(node) (
                  sum by (internal_ip) (
                    label_replace(
                      sum by (instance, device) (node_filesystem_size_bytes{fstype=~"ext4|xfs|btrfs", mountpoint="/"}-node_filesystem_free_bytes{fstype=~"ext4|xfs|btrfs", mountpoint="/"}),
                      "internal_ip",
                      "$1",
                      "instance",
                      "(.*):[0-9]+"
                    )
                  )
                  * on(internal_ip) group_left(node) kube_node_info{${NODE_FILTER}}
                ) /1024 /1024 /1024
      usage_namespace: "sum by(namespace) (kubelet_volume_stats_used_bytes {}) "
    disk:
      read_bytes: "sum by (node) (rate(node_disk_read_bytes_total{node=~\"$1\"}[5m]))"
      write_bytes: "sum by (node) (rate(node_disk_written_bytes_total{node=~\"$1\"}[5m]))"
    network:
      receive_bytes: "sum by (node) (rate(node_network_receive_bytes_total{node=~\"$1\", device!=\"lo\"}[5m]))"
      transmit_bytes: "sum by (node) (rate(node_network_transmit_bytes_total{node=~\"$1\", device!=\"lo\"}[5m]))"
      receive_drop: "sum by (node) (rate(node_network_receive_drop_total{node=~\"$1\"}[5m]))"
      transmit_drop: "sum by (node) (rate(node_network_transmit_drop_total{node=~\"$1\"}[5m]))"
      receive_err: "sum by (node) (rate(node_network_receive_errs_total{node=~\"$1\"}[5m]))"
      transmit_err: "sum by (node) (rate(node_network_transmit_errs_total{node=~\"$1\"}[5m]))"
    gpu:
      total: "gpu_operator_gpu_nodes_total"
      usage_namespace: |
        kube_pod_container_resource_requests{resource="nvidia_com_gpu"}
        * on(namespace, pod)
          group_left()
          (kube_pod_status_phase{phase!="Pending", job="kube-state-metrics"} == 1)
      request: "sum by(node) (kube_pod_container_resource_requests{resource=\"nvidia_com_gpu\",${NODE_FILTER},${NAMESPACE_FILTER} })"
      limit: "sum by(node) (kube_pod_container_resource_limits{resource=\"nvidia_com_gpu\",${NODE_FILTER},${NAMESPACE_FILTER} })"

      memcpy_utilization: "avg by (node) (dcgm_memcpy_utilization{node=~\"$1\"})"
    pod:
      total: "sum(kube_node_status_capacity{resource=\"pods\", ${NODE_FILTER} })"
      used_node: "kubelet_running_pods{${NODE_FILTER}}"
      used_namespace: "count(kube_pod_info{${NODE_FILTER}) by (namespace)"
